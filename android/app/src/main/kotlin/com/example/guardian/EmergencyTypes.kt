package com.example.guardian

import android.graphics.Color

/**
 * Clase centralizada para manejar todos los tipos de emergencia en Android
 * Elimina la duplicaci√≥n de datos entre GuardianBackgroundService y otros componentes
 */
object EmergencyTypes {
    
    /**
     * Mapa con todos los tipos de emergencia y sus configuraciones
     */
    val types = mapOf(
        "up" to EmergencyType(
            type = "STREET ESCORT",
            icon = "üë•",
            color = Color.BLUE,
            title = "üë• Acompa√±amiento Solicitado"
        ),
        "upLeft" to EmergencyType(
            type = "ROBBERY",
            icon = "üö®",
            color = Color.RED,
            title = "üö® Robo Reportado"
        ),
        "left" to EmergencyType(
            type = "UNSAFETY",
            icon = "‚ö†Ô∏è",
            color = Color.parseColor("#FF9800"), // Orange
            title = "‚ö†Ô∏è Zona Insegura"
        ),
        "downLeft" to EmergencyType(
            type = "PHYSICAL RISK",
            icon = "üö®",
            color = Color.parseColor("#9C27B0"), // Purple
            title = "üö® Riesgo F√≠sico"
        ),
        "down" to EmergencyType(
            type = "PUBLIC SERVICES EMERGENCY",
            icon = "üèóÔ∏è",
            color = Color.parseColor("#FFC107"), // Yellow
            title = "üèóÔ∏è Emergencia Servicios P√∫blicos"
        ),
        "downRight" to EmergencyType(
            type = "VIAL EMERGENCY",
            icon = "üö¶",
            color = Color.parseColor("#00BCD4"), // Cyan
            title = "üö¶ Emergencia Vial"
        ),
        "right" to EmergencyType(
            type = "ASSISTANCE",
            icon = "üÜò",
            color = Color.parseColor("#4CAF50"), // Green
            title = "üÜò Asistencia Necesaria"
        ),
        "upRight" to EmergencyType(
            type = "FIRE",
            icon = "üî•",
            color = Color.parseColor("#F44336"), // Red
            title = "üî• Incendio Reportado"
        ),
        "center" to EmergencyType(
            type = "EMERGENCY",
            icon = "üö®",
            color = Color.parseColor("#E91E63"), // Pink
            title = "üö® Emergencia General"
        )
    )
    
    /**
     * Obtiene el tipo de emergencia por direcci√≥n del gesto
     */
    fun getTypeByDirection(direction: String): EmergencyType? {
        return types[direction]
    }
    
    /**
     * Obtiene el tipo de emergencia por nombre
     */
    fun getTypeByName(typeName: String): EmergencyType? {
        return types.values.find { it.type == typeName }
    }
    
    /**
     * Obtiene el t√≠tulo de notificaci√≥n por tipo de alerta
     */
    fun getNotificationTitle(alertType: String): String {
        return when (alertType) {
            "ROBBERY" -> "üö® Robo Reportado"
            "FIRE" -> "üî• Incendio Reportado"
            "ACCIDENT" -> "üöó Accidente Reportado"
            "STREET ESCORT" -> "üë• Acompa√±amiento Solicitado"
            "UNSAFETY" -> "‚ö†Ô∏è Zona Insegura"
            "PHYSICAL RISK" -> "üö® Riesgo F√≠sico"
            "PUBLIC SERVICES EMERGENCY" -> "üèóÔ∏è Emergencia Servicios P√∫blicos"
            "VIAL EMERGENCY" -> "üö¶ Emergencia Vial"
            "ASSISTANCE" -> "üÜò Asistencia Necesaria"
            "EMERGENCY" -> "üö® Emergencia General"
            else -> "üö® Alerta de Emergencia"
        }
    }
    
    /**
     * Construye el cuerpo de la notificaci√≥n
     */
    fun buildNotificationBody(
        alertType: String,
        description: String?,
        isAnonymous: Boolean,
        shareLocation: Boolean
    ): String {
        val body = StringBuilder(alertType)
        
        if (!description.isNullOrEmpty()) {
            body.append("\n").append(description)
        }
        
        if (shareLocation) {
            body.append("\nüìç Ubicaci√≥n incluida")
        }
        
        if (isAnonymous) {
            body.append("\nüë§ Reporte an√≥nimo")
        }
        
        return body.toString()
    }
}

/**
 * Clase de datos para representar un tipo de emergencia
 */
data class EmergencyType(
    val type: String,
    val icon: String,
    val color: Int,
    val title: String
)
